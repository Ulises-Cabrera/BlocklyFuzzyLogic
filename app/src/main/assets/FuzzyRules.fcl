

FUNCTION_BLOCK FuzzyRules	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	errores : REAL;
	tiempo: REAL;
	ayudas : REAL;
	categoria: REAL;
	emocion: REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	numeroNivel : REAL;
	retroalimentacion : REAL;
END_VAR

FUZZIFY errores			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM bueno := (0, 1) (1.5, 0);
	TERM acceptable:= (1, 0) (2,1) (2.5,0);
	TERM malo:= (2, 0) (3,1) (3.1, 0);
END_FUZZIFY

FUZZIFY tiempo			// Fuzzify input variable 'food': { 'rancid', 'delicious' }
	TERM bueno := (0, 1) (300, 0);
	TERM acceptable := (250,0) (425,1) (600,0) ;
	TERM malo := (550,0) (850,1);
END_FUZZIFY

FUZZIFY ayudas	// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM bueno := (0, 1) (1.5, 0) ;
	TERM acceptable:= (1, 0) (1.5,1) (2.15,0);
	TERM malo:= (2, 0) (3, 1) (3.1,0);
END_FUZZIFY

FUZZIFY categoria	// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM basico := (1, 1) (1.5, 0) ;
	TERM intermedio:= (1.3, 0) (2,1) (2.5,0);
	TERM experto:= (2.25, 0) (3,1) (3.1, 0);
END_FUZZIFY

FUZZIFY emocion	// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM infeliz := (0,1) (4,0);
	TERM normal := (3,0) (5.0,1) (6.5,0);
	TERM feliz := (6,0)  (10,1);
END_FUZZIFY

DEFUZZIFY numeroNivel			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM basico := (1,1) (4,0);
	TERM intermedio := (3.5,0) (5.1,1) (6.5,0);
	TERM experto := (6,0)  (9,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY retroalimentacion			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM poco := (1,1) (4,0);
	TERM media := (3.5,0) (5.1,1) (6.5,0);
	TERM mucha := (6,0)  (9,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF errores IS bueno AND tiempo IS bueno AND ayudas IS bueno AND categoria IS basico THEN numeroNivel IS intermedio;
	RULE 2 : IF errores IS bueno AND tiempo IS bueno AND ayudas IS bueno AND categoria IS intermedio THEN numeroNivel IS experto;

    RULE 3 : IF errores IS acceptable AND tiempo IS bueno AND ayudas IS bueno AND categoria IS basico THEN numeroNivel IS intermedio WITH 0.6;
    RULE 4 : IF errores IS acceptable AND tiempo IS bueno AND ayudas IS bueno AND categoria IS intermedio THEN numeroNivel IS experto WITH 0.6;

    RULE 5 : IF errores IS malo AND tiempo IS bueno AND ayudas IS bueno AND categoria IS basico THEN numeroNivel IS basico WITH 0.1;
    RULE 6 : IF errores IS malo AND tiempo IS bueno AND ayudas IS bueno AND categoria IS intermedio THEN numeroNivel IS basico WITH 0.1;
    RULE 7 : IF errores IS malo AND tiempo IS bueno AND ayudas IS bueno AND categoria IS experto THEN numeroNivel IS intermedio WITH 0.1;

    RULE 8 : IF errores IS bueno AND tiempo IS acceptable OR ayudas IS acceptable AND categoria IS basico THEN numeroNivel IS basico WITH 0.08;
	RULE 9 : IF errores IS bueno AND tiempo IS acceptable OR ayudas IS acceptable AND categoria IS intermedio THEN numeroNivel IS intermedio WITH 0.08;
	RULE 10 : IF errores IS bueno AND tiempo IS acceptable OR ayudas IS acceptable AND categoria IS experto THEN numeroNivel IS experto WITH 0.08;

    RULE 11 : IF errores IS bueno AND tiempo IS malo OR ayudas IS malo AND categoria IS basico THEN numeroNivel IS basico WITH 0.1;
	RULE 12 : IF errores IS bueno AND tiempo IS malo OR ayudas IS malo AND categoria IS intermedio THEN numeroNivel IS intermedio WITH 0.1;
	RULE 13 : IF errores IS bueno AND tiempo IS malo OR ayudas IS malo AND categoria IS experto THEN numeroNivel IS experto WITH 0.1;

	RULE 14 : IF numeroNivel IS experto AND emocion IS feliz THEN retroalimentacion IS poco;
	RULE 15 : IF numeroNivel IS experto AND emocion IS normal THEN retroalimentacion IS media;
	RULE 16 : IF numeroNivel IS experto AND emocion IS infeliz THEN retroalimentacion IS mucha;

    RULE 17 : IF numeroNivel IS intermedio AND emocion IS feliz THEN retroalimentacion IS poco WITH 0.6;
	RULE 18 : IF numeroNivel IS intermedio AND emocion IS normal THEN retroalimentacion IS media WITH 0.6;
	RULE 19 : IF numeroNivel IS intermedio AND emocion IS infeliz THEN retroalimentacion IS mucha WITH 0.6;

    RULE 20 : IF numeroNivel IS basico AND emocion IS feliz THEN retroalimentacion IS poco WITH 0.3;
	RULE 21 : IF numeroNivel IS basico AND emocion IS normal THEN retroalimentacion IS media WITH 0.3;
	RULE 22 : IF numeroNivel IS basico AND emocion IS infeliz THEN retroalimentacion IS mucha WITH 0.3;

END_RULEBLOCK

END_FUNCTION_BLOCK
